{"version":3,"sources":["components/NavbarComponent/NavbarComponent.js","redux/photoReducer.ts","redux/photoReducerAC.ts","components/Photos/Photos.tsx","components/Modal/ModalWin.tsx","components/Loader/Loader.js","sort.ts","components/Photos/PhotosContainer.tsx","components/About/About.js","components/Products/Products.js","components/Footer/Footer.js","App.js","serviceWorker.js","api/api.ts","redux/saga/getPhotosSaga.ts","redux/saga/modalPhotoSaga.ts","redux/saga/index.ts","redux/store.ts","index.js"],"names":["NavbarComponent","className","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","exact","to","initialState","photos","comments","urlModal","currentPhoto","url","photoReducer","state","action","type","val","photo","setModal","Photos","props","draggable","onDragStart","onDragOver","onDrop","src","onClick","showModal","alt","ModalWin","useState","textareaValue","setTextareaValue","show","onHide","Header","closeButton","Body","map","com","onChange","event","target","value","placeholder","textComments","addComment","Loader","sortsEl","a","b","connector","connect","getPhotosSaga","modalPhotoSaga","setCurrentPhoto","dropUpdate","sort","el","key","preventDefault","dragOverHandler","dropResults","element","undefined","dropHandler","About","Products","Footer","href","App","path","render","Boolean","window","location","hostname","match","URL","api","axios","get","getPhotosWorker","getPhotosWatcher","call","response","put","data","console","log","takeEvery","modalPhotoWorker","modalPhotoWatcher","length","text","rootWatcher","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.370d98ce.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport './NavbarComponent.scss'\n\nconst NavbarComponent = () => {\n  return (\n    <div className=\"container\">\n      <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>ТЗ по React</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-toggle\" />\n        <Navbar.Collapse id=\"basic-toggle\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/about\" className=\"nav-link\">About ТЗ</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/products\" className=\"nav-link\">Используемые технологии</NavLink>\n            </li>\n          </ul>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\nexport default NavbarComponent\n","import { IStateType } from '../types/stateInterfaces'\nimport { ActionsType } from '../types/ACTypes'\n\nexport const SET_PHOTOS = 'SET_PHOTOS'\nexport const SET_MODAL = 'SET_MODAL'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const GET_PHOTOS_SAGA = 'GET_PHOTOS_SAGA'\nexport const MODAL_PHOTO_SAGA = 'MODAL_PHOTO_SAGA'\nexport const SET_CURRENT_PHOTO = 'SET_CURRENT_PHOTO' \nexport const SET_DROP_UPDATE = 'SET_DROP_UPDATE'\n\nlet initialState: IStateType = {\n  photos: null,\n  comments: [],\n  urlModal: '',\n  currentPhoto: { id: 0, url: ''}\n}\n\nconst photoReducer = (state = initialState, action: ActionsType): IStateType => {\n  switch (action.type) {\n    case SET_PHOTOS:\n      return {\n        ...state,\n        photos: action.val\n      }\n      case SET_MODAL:\n        return {\n          ...state,\n          comments: action.comments,\n          urlModal: action.url\n        }\n        case ADD_COMMENT:\n          return {\n            ...state,\n            comments: action.comments,\n          }\n        case SET_CURRENT_PHOTO:\n          return {\n            ...state,\n            currentPhoto: action.photo\n          }\n        case SET_DROP_UPDATE:\n          return {\n            ...state,\n            photos: action.photos\n          }\n    default: return state\n  }\n}\n\nexport default photoReducer","import { AddCommentType, GetPhotosSagaType, ModalPhotoSagaType, SetCurrentPhotoType, SetDropUpdateType, SetModalType, SetPhotosType } from \"../types/ACTypes\"\nimport { IUrlBackEnd } from \"../types/stateInterfaces\"\nimport { ADD_COMMENT, GET_PHOTOS_SAGA, MODAL_PHOTO_SAGA, SET_CURRENT_PHOTO, SET_DROP_UPDATE, SET_MODAL, SET_PHOTOS } from \"./photoReducer\"\n\nexport const setPhotos = (val: Array<IUrlBackEnd>): SetPhotosType => ({type: SET_PHOTOS, val})\nexport const setModal = (comments: string[], url: string): SetModalType => ({type: SET_MODAL, comments, url})\nexport const addComment = (comments: string[]): AddCommentType => ({type: ADD_COMMENT, comments})\nexport const getPhotosSaga = (): GetPhotosSagaType => ({type: GET_PHOTOS_SAGA})\nexport const modalPhotoSaga = (id: number): ModalPhotoSagaType => ({type: MODAL_PHOTO_SAGA, id})\nexport const setCurrentPhoto = (photo: IUrlBackEnd): SetCurrentPhotoType => ({type: SET_CURRENT_PHOTO, photo})\nexport const dropUpdate = (photos: Array<IUrlBackEnd>): SetDropUpdateType => ({type: SET_DROP_UPDATE, photos})","import React from 'react'\nimport { PhotosContainerPropsType } from '../../types/componentsTypes'\nimport './Photos.scss'\n\nexport const Photos: React.FC<PhotosContainerPropsType> = props => {\n  return(\n    <div \n      className=\"col-12 col-md-6 col-lg-6\"\n      draggable={props.draggable}\n      onDragStart={props.onDragStart}\n      onDragOver={props.onDragOver}\n      onDrop={props.onDrop} \n    >\n       <img src={props.url} onClick={() => props.showModal(props.id)} alt=\"some img\"/>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport './Modal.scss'\nimport Modal from 'react-bootstrap/Modal'\nimport { ModalContainerPropsType } from '../../types/componentsTypes'\n\nconst ModalWin: React.FC<ModalContainerPropsType> = props => {\n\n  const handleClose = () => {\n    const comments: [] = []\n    const url: string = ''\n\n    props.setModal(comments, url)\n  }\n\n  const [textareaValue, setTextareaValue] = useState<string>('')\n  \n  const saveComment = () => {\n    const textComments: Array<string> = [...props.comments, textareaValue]\n    props.addComment(textComments)\n    setTextareaValue('')\n  }\n\n  return (\n      <Modal show={props.urlModal} onHide={handleClose}>\n        <Modal.Header closeButton></Modal.Header>\n        <Modal.Body>\n          <img src={props.urlModal} alt=\"\"/>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Комментарии:\n            </div>\n            <div className=\"card-body\">\n              {\n                props.comments.map(com => {\n                  return<div className=\"comment\">{com}</div>\n                })\n              }\n            </div>\n            <textarea \n              className=\"card-footer\" \n              onChange={event => setTextareaValue(event.target.value)}\n              value={textareaValue}\n              placeholder=\"Текст комментария...\"\n              ></textarea>\n            <button className=\"btn btn-success\" onClick={saveComment}>Добавить</button>\n          </div>\n        </Modal.Body>\n      </Modal>\n  )\n}\n\nexport default ModalWin\n\n","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = props => {\n  return (\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader","import { IUrlBackEnd } from \"./types/stateInterfaces\"\n\nexport const sortsEl = (a: IUrlBackEnd, b: IUrlBackEnd) => {\n  if ((a.id || 0) > (b.id || 0)) return 1\n  return -1\n}","import React from 'react'\nimport { connect } from 'react-redux'\n//reducer & AC:\nimport { addComment, setModal, getPhotosSaga, modalPhotoSaga, setCurrentPhoto, dropUpdate } from '../../redux/photoReducerAC'\n//components:\nimport { Photos } from './Photos'\nimport ModalWin from '../Modal/ModalWin'\nimport Loader from '../Loader/Loader'\n//types:\nimport { AppStateType } from '../../redux/store'\nimport { PhotosContaiberDispatchType, PhotosContaiberStateType } from '../../types/componentsTypes'\nimport { IUrlBackEnd } from '../../types/stateInterfaces'\n// function for method sort:\nimport { sortsEl } from '../../sort'\n\nconst PhotosContainer: React.FC<PhotosContaiberStateType & PhotosContaiberDispatchType> = props => {\n  \n  if (props.photos === null) props.getPhotosSaga()\n\n  const showModal = (id: number) => {\n    props.modalPhotoSaga(id)\n  }\n\n  const dragStartHadler = (photo: IUrlBackEnd) => {\n    props.setCurrentPhoto(photo)\n  }\n\n  const dragOverHandler = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault()\n  }\n\n  const dropHandler = (event: React.DragEvent<HTMLDivElement>, photo: IUrlBackEnd) => {\n    event.preventDefault()\n\n    let dropResults: Array<IUrlBackEnd> | undefined = props.photos?.map((element: IUrlBackEnd) => {\n      if (element.id === photo.id) return {...element, id: props.currentPhoto.id}\n      if (element.id === props.currentPhoto.id) return {...element, id: photo.id}\n      return element\n    })\n\n    if (dropResults === undefined) dropResults = [{id: 0, url: ''}]\n\n    props.dropUpdate(dropResults)\n  }\n\n  return (\n    <div className=\"container\">\n      { props.photos === null &&\n        <Loader/>\n      }\n      <div className=\"photos\">\n        <div className=\"row\">\n          { props.photos !== null &&\n            props.photos.sort(sortsEl).map(el => {\n              return <Photos\n                key={el.id}\n                url={el.url}\n                id={el.id}\n                showModal={showModal}\n                draggable={true}\n                onDragStart={() => dragStartHadler(el)}\n                onDragOver={(event: React.DragEvent<HTMLDivElement>) => dragOverHandler(event)}\n                onDrop={(event: React.DragEvent<HTMLDivElement>) => dropHandler(event, el)}  \n              />\n            })\n          } \n          <ModalWin\n            urlModal={props.urlModal}\n            comments={props.comments}\n            addComment={props.addComment}\n            setModal={props.setModal}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType): PhotosContaiberStateType => {\n  return {\n    photos: state.photoReducer.photos,\n    comments: state.photoReducer.comments,\n    urlModal: state.photoReducer.urlModal,\n    currentPhoto: state.photoReducer.currentPhoto\n  }\n}\nconst connector = connect(mapStateToProps, { getPhotosSaga, modalPhotoSaga, addComment, setModal, setCurrentPhoto, dropUpdate })\nexport default connector(PhotosContainer)\n","import React from 'react';\nimport './About.scss';\n\nconst About = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"about\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                Техническое задание.\n              </div>\n              <div className=\"card-body\">\n                <p>\n                  Необходимо получить список фотографий с бекенд части по адресу:\n                  \"https://boiling-refuge-66454.herokuapp.com/images/\".\n                </p>\n                <p>\n                  Отобразить фотографии на странице.\n                </p>\n                <p>\n                  При клике на фото - открывается модальное окно с подробностями по данной фотографии.\n                </p>\n                <p>\n                  Использованы методы <strong>Drag-and-drop</strong>: фотографии можно менять местами.\n                </p>\n                <p>\n                  Информация для модального окна по адресу:\n                  \"https://boiling-refuge-66454.herokuapp.com/images/id\".\n                  Разрешить возможность добавлять комментарии к фото в модальном окне.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default About","import React from 'react';\nimport './Products.scss';\n\nconst Products = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"technologies\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                Технологии:\n              </div>\n              <div className=\"card-body\">\n                <p>ReactJS, React Hooks, React Functional Components, React-Router-Dom</p>\n                <p>TypeScript</p>  \n                <p>React-Redux, Redux, Redux-Saga</p>\n                <p>Node-Sass, CSS Flexbox</p>\n                <p>Bootstrap, React-Bootstrap(Modal, Navbar)</p>\n                <p>Axios</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Products","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"row text-center\">\n          <div className=\"col-12 col-xl-6 footer-info\">\n            <p>© 2020 Copyright:</p>\n            <a href=\"https://github.com/102nix\">102nix</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.scss'\n//components:\nimport NavbarComponent from './components/NavbarComponent/NavbarComponent';\nimport PhotosContainer from './components/Photos/PhotosContainer';\nimport About from './components/About/About';\nimport Products from './components/Products/Products';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <NavbarComponent />\n      <div className=\"content\">\n        <Route exact path=\"/\" render={() => <PhotosContainer /> } />\n        <Route path=\"/about\" render={() => <About /> } />\n        <Route path=\"/products\" render={() => <Products /> } />\n      </div>\n      <Footer /> \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\nimport { ApiAllFotosType, ApiGetModal } from '../types/apiTypes';\n\nconst URL: string = \"https://boiling-refuge-66454.herokuapp.com/images/\";\n\nexport const api = {\n  getAPIPhotos () {\n    return axios.get<ApiAllFotosType>(URL)\n  },\n  getAPIModal (id: number) {\n    return axios.get<ApiGetModal>(URL + id)\n  }\n}","import { call, put, takeEvery } from 'redux-saga/effects'\nimport { api } from '../../api/api'\nimport { Action } from 'redux'\nimport { setPhotos } from '../photoReducerAC'\nimport { GET_PHOTOS_SAGA } from '../photoReducer'\n\nfunction* getPhotosWorker (action: Action) {\n  try {\n    const response = yield call (api.getAPIPhotos)\n    yield put (setPhotos(response.data))\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport function* getPhotosWatcher () {\n  yield takeEvery (GET_PHOTOS_SAGA, getPhotosWorker)\n}","import { call, put, takeEvery } from 'redux-saga/effects'\nimport { api } from '../../api/api'\nimport { IgetAPIModal } from '../../types/sagaInterfaces'\nimport { MODAL_PHOTO_SAGA } from '../photoReducer'\nimport { setModal } from '../photoReducerAC'\n\nfunction* modalPhotoWorker (action: IgetAPIModal) {\n  try {\n    const response =  yield call (api.getAPIModal, action.id)\n    let comments: string[] = []\n    if (response.data.comments.length > 0) {\n      comments = [response.data.comments[0].text]\n    }\n    const url: string = response.data.url\n    yield put (setModal(comments, url))\n  } catch (err) {\n    console.log(err)\n  }\n  \n}\n\nexport function* modalPhotoWatcher () {\n  yield takeEvery (MODAL_PHOTO_SAGA, modalPhotoWorker) \n}\n\n","import { all } from 'redux-saga/effects'\nimport { getPhotosWatcher } from './getPhotosSaga'\nimport { modalPhotoWatcher } from './modalPhotoSaga'\n\nexport function* rootWatcher () {\n  yield all ([getPhotosWatcher(), modalPhotoWatcher()])\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport photoReducer from './photoReducer'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootWatcher } from './saga/index'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nlet rootReducer = combineReducers({\n  photoReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk, sagaMiddleware))\nsagaMiddleware.run(rootWatcher)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}